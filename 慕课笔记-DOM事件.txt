事件是文档或者浏览器窗口中发生的特定的交互瞬间。
JS和HTML之间的交互，都是通过事件来实现。

1、事件流：描述的是从页面中接受事件的顺序
1.1、ie等----事件冒泡流
事件冒泡：即事件最开始由最具体的元素（文档中嵌套层次最深的那个节点）接收，然后逐级向上传播至最不具体的那个节点。
1.2、其他----事件捕获流
事件捕获：不太具体的节点应该更早接收到事件，而最具体的节点应该最后接收到事件，和事件冒泡顺序相反。

2、使用事件处理程序
2.1、HTML事件处理程序
2.2、OM0级事件处理程序：把一个函数赋值给一个事件的处理程序属性，用的比较多的方法。
2.3、DOM2级事件处理程序：添加事件：addEventListener()和删除事件：removeEventListener()。接收三个参数：要处理的事件名.addEventListener（"onclick等类似于",函数，布尔值）。
2.4、IE事件处理程序：添加事件：attachEvent()和删除事件：detachEvent()。要处理的事件名.attachEvent("click等类似的",函数)。不使用布尔值的原因：IE8以及更早的浏览器版本指支持事件冒泡。

3、事件对象：在触发DOM上的事件时都会产生一个对象event
3.1、DOM中的事件对象
3.1.1、type属性 用于获取事件类型
3.1.2、target属性 用于获取事件的目标
3.1.3、stopPropagation()方法 用于阻止事件冒泡
3.1.4、preventDefault()方法 阻止事件的默认行为，如标签a的默认行为是点击就跳转。
3.2、IE中的事件对象
3.2.1、type属性 用于获取事件类型
3.2.2、srcElement属性 用于获取事件的目标
3.2.3、cancelBubble属性 用于阻止事件冒泡，设置为true时表示阻止，设置为false表示不阻止。
3.2.4、returnValue属性 用于阻止事件的默认行为，设置为false表示阻止事件的默认行为。

4、鼠标事件
5、键盘事件
5.1、keyDown：当用户按下键盘上的任意键时触发，而且按住不妨的话，会重复触发此事件。
5.2、keyPress：当用户按下键盘上的字符键时触发，而且按住不妨的话，会重复触发此事件。
5.3、keyUp：当用户释放键盘上的键时触发。
